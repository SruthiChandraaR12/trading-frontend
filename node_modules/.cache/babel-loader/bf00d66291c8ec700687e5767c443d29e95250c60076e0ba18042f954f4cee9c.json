{"ast":null,"code":"var _jsxFileName = \"D:\\\\EI\\\\trading-management\\\\frontend\\\\src\\\\features\\\\trades\\\\TradeForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTrade } from './tradesSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TradeForm() {\n  _s();\n  const [form, setForm] = useState({\n    symbol: '',\n    type: 'BUY',\n    quantity: 0,\n    price: 0,\n    notes: ''\n  });\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n  const submit = async e => {\n    e.preventDefault();\n    await dispatch(createTrade(form));\n    nav('/trades');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submit,\n    style: {\n      display: 'grid',\n      gap: 8,\n      maxWidth: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"New Trade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Symbol\",\n      value: form.symbol,\n      onChange: e => setForm({\n        ...form,\n        symbol: e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: form.type,\n      onChange: e => setForm({\n        ...form,\n        type: e.target.value\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"BUY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \"SELL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Quantity\",\n      value: form.quantity,\n      onChange: e => setForm({\n        ...form,\n        quantity: +e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Price\",\n      value: form.price,\n      onChange: e => setForm({\n        ...form,\n        price: +e.target.value\n      }),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Notes\",\n      value: form.notes,\n      onChange: e => setForm({\n        ...form,\n        notes: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(TradeForm, \"STI3gWPNBF6qFOuPtbtau5ApcRg=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = TradeForm;\nvar _c;\n$RefreshReg$(_c, \"TradeForm\");","map":{"version":3,"names":["React","useState","useDispatch","createTrade","useNavigate","jsxDEV","_jsxDEV","TradeForm","_s","form","setForm","symbol","type","quantity","price","notes","dispatch","nav","submit","e","preventDefault","onSubmit","style","display","gap","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/EI/trading-management/frontend/src/features/trades/TradeForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { createTrade } from './tradesSlice';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function TradeForm(){\n  const [form, setForm] = useState({ symbol:'', type:'BUY', quantity:0, price:0, notes:'' });\n  const dispatch = useDispatch();\n  const nav = useNavigate();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    await dispatch(createTrade(form));\n    nav('/trades');\n  };\n\n  return (\n    <form onSubmit={submit} style={{ display:'grid', gap:8, maxWidth:400 }}>\n      <h3>New Trade</h3>\n      <input placeholder=\"Symbol\" value={form.symbol} onChange={e=>setForm({...form, symbol:e.target.value})} required />\n      <select value={form.type} onChange={e=>setForm({...form, type:e.target.value})}>\n        <option>BUY</option>\n        <option>SELL</option>\n      </select>\n      <input type=\"number\" placeholder=\"Quantity\" value={form.quantity} onChange={e=>setForm({...form, quantity:+e.target.value})} required />\n      <input type=\"number\" placeholder=\"Price\" value={form.price} onChange={e=>setForm({...form, price:+e.target.value})} required />\n      <textarea placeholder=\"Notes\" value={form.notes} onChange={e=>setForm({...form, notes:e.target.value})}></textarea>\n      <button type=\"submit\">Create</button>\n    </form>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}